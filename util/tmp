import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.image import MIMEImage
from email.mime.text import MIMEText
import folium
import io
import base64
import numpy as np
from PIL import Image
import selenium.webdriver as webdriver

# Create the map
m = folium.Map(location=[35.8617, 104.1954], zoom_start=5)
# ... add your HeatMap or other layers ...

# Save the map to an HTML file
map_filename = 'city_heatmap.html'
m.save(map_filename)

# Convert the HTML map to an image using Selenium and WebDriver
def map_html_to_image(html_file):
    # Set up Selenium WebDriver (you need to have geckodriver or chromedriver installed)
    options = webdriver.ChromeOptions()
    options.add_argument('headless')
    driver = webdriver.Chrome(options=options)
    driver.set_window_size(800, 600)  # Set window size to desired map size

    # Load the HTML file
    driver.get('file://' + html_file)

    # Wait for the map to render
    driver.implicitly_wait(5)

    # Take screenshot
    png = driver.get_screenshot_as_png()
    driver.quit()

    # Convert PNG to Image
    image = Image.open(io.BytesIO(png))
    return image

# Convert map HTML to image
map_image = map_html_to_image(map_filename)

# Save the image to a BytesIO buffer
buffer = io.BytesIO()
map_image.save(buffer, format='PNG')
map_image_str = base64.b64encode(buffer.getvalue()).decode('utf-8')

# Email configuration
smtp_server = 'smtp.example.com'
smtp_port = 587
smtp_user = 'your_email@example.com'
smtp_password = 'your_password'
from_email = 'your_email@example.com'
to_email = 'recipient@example.com'
subject = 'City Heatmap'
body = 'Please find the city heatmap below:<br><img src="cid:map_image"><br>Best regards.'

# Create the email message
message = MIMEMultipart('related')
message['From'] = from_email
message['To'] = to_email
message['Subject'] = subject

# Alternative MIME part for HTML content
message_alternative = MIMEMultipart('alternative')
message.attach(message_alternative)

# Attach the email body with the image embedded
html_content = MIMEText(body, 'html')
message_alternative.attach(html_content)

# Attach the image
image_mime = MIMEImage(buffer.getvalue(), name='city_heatmap.png')
image_mime.add_header('Content-ID', '<map_image>')
image_mime.add_header('Content-Disposition', 'inline', filename='city_heatmap.png')
message.attach(image_mime)

# Send the email
with smtplib.SMTP(smtp_server, smtp_port) as server:
    server.starttls()
    server.login(smtp_user, smtp_password)
    server.send_message(message)

print('Email sent successfully.')
